echo -e "set nu\nsyntax off\nset expandtab\nset shiftwidth=2" | sudo -u user tee ~user/.vimrc ~user/.virc  ### change ~user

bash$ echo grep less vi ls cat sed awk tr lvm lsblk file cp mv

~    : Changes the case of current character
guu  : Change current line from upper to lower.
gUU  : Change current LINE from lower to upper.
guw  : Change to end of current WORD from upper to lower.
guaw : Change all of current WORD to lower.
gUw  : Change to end of current WORD from lower to upper.

: 6,9 s/\s\+$// : Trim spaces to end of lines range
: 6,9 s/\s\+\S\+$// : Delete latest word and trim spaces of lines range
: 6,9 s/\(\S\+\)$/&\t\1/ : Copy each latest word of range to the end of its own string after \tab

: 6,9 s/words words//g
:6, 9 s/word/\/opt\/decoder\/conf/g  : paste '/opt/decoder' instaead of 'word'

# Matching
------------------------------------------------------------
. any character except new line	    \U  non-uppercase character
\s  whitespace character	          \d  digit	
\D  non-digit                       \x  hex digit	
\X  non-hex digit                   \o  octal digit	
\O  non-octal digit                 \h  head of word character (a,b,c...z,A,B,C...Z and _)	
\H  non-head of word character      \p  printable character	
\P  like \p, but excluding digits   \w  word character	
\W  non-word character              \a  alphabetic character	
\A  non-alphabetic character        \l  lowercase character	
\L  non-lowercase character         \u  uppercase character	
------------------------------------------------------------

Quantifier
------------------------------------------------------------
*       matches 0 or more of the preceding characters, ranges or metacharacters .* matches everything including empty line
\+      matches 1 or more of the preceding characters...
\=      matches 0 or 1 more of the preceding characters...
\{n,m}  matches from n to m of the preceding characters...
\{n}    matches exactly n times of the preceding characters...
\{,m}   matches at most m (from 0 to m) of the preceding characters...
\{n,}   matches at least n of of the preceding characters... where n and m are positive integers (>0)
